"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("serviceworker.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)},function(e){console.log("ServiceWorker registration failed: ",e)})});class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static createIDBStore(e){let t=(window.indexedDB||window.mozIndexedDB||window.webkiteIndexedDB||window.msIndexedDB||window.shimIndexedDB).open("RestaurantDB",1);t.onupgradeneeded=function(){t.result.createObjectStore("RestaurantStore",{keyPath:"id"}).createIndex("by-id","id")},t.onerror=function(e){console.error(`IndexedDB error: ${e.target.errorCode}`)},t.onsuccess=function(){let n=t.result,r=n.transaction("RestaurantStore","readwrite"),o=r.objectStore("RestaurantStore");o.index("by-id");e.forEach(e=>o.put(e)),r.oncomplete=function(){n.close()}}}static getCachedData(e){let t=(window.indexedDB||window.mozIndexedDB||window.webkiteIndexedDB||window.msIndexedDB||window.shimIndexedDB).open("RestaurantDB",1);t.onsuccess=function(){let n=t.result,r=n.transaction("RestaurantStore","readwrite"),o=r.objectStore("RestaurantStore").getAll();o.onsuccess=function(){e(null,o.result)},r.oncomplete=function(){n.close()}}}static fetchRestaurants(e){if(navigator.onLine){let t=new XMLHttpRequest;t.open("GET",DBHelper.DATABASE_URL),t.onload=(()=>{if(200===t.status){const n=JSON.parse(t.responseText);DBHelper.createIDBStore(n),e(null,n)}else{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}}),t.send()}else console.log("No connection, fetching cached data"),DBHelper.getCachedData((t,n)=>{n.length>0&&e(null,n)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,o)=>{if(r)n(r,null);else{let r=o;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return void 0===e.photograph?"/dist/img/no_image.webp":`/dist/img/${e.photograph}.webp`}static lazyLoad(){"undefined"!=typeof LazyLoad&&new LazyLoad({elements_selector:".restaurant-img"})}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}